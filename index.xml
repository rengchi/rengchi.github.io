<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>仍迟</title>
    <link>https://rengchi.github.io/</link>
    <description>Recent content on 仍迟</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 04 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://rengchi.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JQuery 方法</title>
      <link>https://rengchi.github.io/posts/tech/jq-util/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/jq-util/</guid>
      <description>&lt;h1 id=&#34;拖动&#34;&gt;拖动&lt;/h1&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(function ($) {
    $.fn.draggable = function () {
        var isDragging = false;
        var offsetX, offsetY;
        var $draggingElement;
        var isDragEvent = false; // 标记是否是拖动操作
        var dragThreshold = 5;   // 拖动的最小距离阈值，超过该距离就认为是拖动

        function savePosition(element, left, top) {
            document.cookie = `${element.attr(&amp;#39;id&amp;#39;)}_position=${left},${top};path=/`;
        }

        function loadPosition(element) {
            var cookies = document.cookie.split(&amp;#39;; &amp;#39;);
            var elementId = element.attr(&amp;#39;id&amp;#39;);
            for (var i = 0; i &amp;lt; cookies.length; i++) {
                var parts = cookies[i].split(&amp;#39;=&amp;#39;);
                if (parts[0] === `${elementId}_position`) {
                    return parts[1].split(&amp;#39;,&amp;#39;).map(Number);
                }
            }
            return null;
        }

        this.each(function () {
            var $this = $(this);
            var position = loadPosition($this);
            if (position) {
                $this.css({
                    position: &amp;#39;fixed&amp;#39;,
                    left: position[0] + &amp;#39;px&amp;#39;,
                    top: position[1] + &amp;#39;px&amp;#39;
                });
            } else {
                $this.css(&amp;#39;position&amp;#39;, &amp;#39;fixed&amp;#39;);
            }
        });

        this.on(&amp;#39;mousedown&amp;#39;, function (e) {
            $draggingElement = $(this);
            var originalPos = $draggingElement.offset();

            $draggingElement.css({
                left: originalPos.left + &amp;#39;px&amp;#39;,
                top: originalPos.top + &amp;#39;px&amp;#39;
            });

            isDragging = true;
            offsetX = e.clientX - originalPos.left;
            offsetY = e.clientY - originalPos.top;
            isDragEvent = false; // 标记拖动开始
            e.preventDefault(); // 防止文本选择
        });

        $(document).on(&amp;#39;mousemove&amp;#39;, function (e) {
            if (isDragging) {
                var newLeft = e.clientX - offsetX;
                var newTop = e.clientY - offsetY;

                if (Math.abs(newLeft - $draggingElement.offset().left) &amp;gt; dragThreshold ||
                    Math.abs(newTop - $draggingElement.offset().top) &amp;gt; dragThreshold) {
                    isDragEvent = true;
                }

                $draggingElement.css({ left: newLeft + &amp;#39;px&amp;#39;, top: newTop + &amp;#39;px&amp;#39; });
                savePosition($draggingElement, newLeft, newTop);
            }
        });

        $(document).on(&amp;#39;mouseup&amp;#39;, function () {
            isDragging = false;
        });

        this.on(&amp;#39;click&amp;#39;, function (e) {
            if (isDragEvent) {
                e.stopImmediatePropagation();
                return false;
            }
        });

        return this;
    };
})(jQuery);
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>JS 方法</title>
      <link>https://rengchi.github.io/posts/tech/js-util/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/js-util/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;相差天数&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function calculateDayDifference(deliveryTime) {
    // 将传入的日期字符串转换为 Date 对象
    let deliveryDate = new Date(deliveryTime);
    let currentDate = new Date();

    // 将时间部分归零，以便仅比较日期部分
    deliveryDate.setHours(0, 0, 0, 0);
    currentDate.setHours(0, 0, 0, 0);

    // 计算两个日期之间的毫秒级时间差
    let timeDifference = deliveryDate.getTime() - currentDate.getTime();

    // 将时间差转换为天数，并返回
    return Math.floor(timeDifference / (1000 * 60 * 60 * 24));
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;当前日期&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function formatNumber(num) {
    return String(num).padStart(2, &amp;#39;0&amp;#39;);
}

function formatDate(date = new Date(), format = &amp;#39;YYYY-MM-DD HH:mm:ss&amp;#39;) {
    const replacements = {
        YYYY: date.getFullYear(),
        MM: formatNumber(date.getMonth() + 1),
        DD: formatNumber(date.getDate()),
        HH: formatNumber(date.getHours()),
        mm: formatNumber(date.getMinutes()),
        ss: formatNumber(date.getSeconds())
    };

    return format.replace(/YYYY|MM|DD|HH|mm|ss/g, match =&amp;gt; replacements[match]);
}

console.log(formatDate());                    // 默认格式: 2024-03-04 14:30:15
console.log(formatDate(new Date(), &amp;#39;MM/DD&amp;#39;)); // 03/04
console.log(formatDate(new Date(), &amp;#39;HH:mm&amp;#39;)); // 14:30
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;复选框选中状态&lt;/p&gt;</description>
    </item>
    <item>
      <title>PHP 方法</title>
      <link>https://rengchi.github.io/posts/tech/php-func/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/php-func/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;json 格式数据获取&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php

// 从输入流中读取 JSON 数据
$inputData = file_get_contents(&amp;#39;php://input&amp;#39;);

// 解析 JSON 数据为 PHP 数组
$data = json_decode($inputData, true);
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;dd&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function dd() {
    // 设置响应头，确保正确显示字符编码
    header(&amp;#39;Content-Type: text/html; charset=UTF-8&amp;#39;);
    
    // 获取所有传入的参数
    $args = func_get_args();
    
    echo &amp;#39;&amp;lt;div style=&amp;#34;background-color: #222; padding: 10px;&amp;#34;&amp;gt;&amp;#39;;
    
    foreach ($args as $arg) {
        echo &amp;#39;&amp;lt;div style=&amp;#34;
                    background-color: #333; 
                    color: #0f0; 
                    padding: 10px; 
                    margin-bottom: 10px;
                    border-radius: 5px;
                    font-size: 14px; 
                    font-family: monospace;
                    white-space: pre-wrap;
                    word-wrap: break-word;
                    overflow: auto;&amp;#34;&amp;gt;&amp;#39;;
        echo &amp;#39;&amp;lt;pre&amp;gt;&amp;#39;;
        print_r($arg); // 使用 print_r 以更可读的格式输出
        echo &amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;;
        echo &amp;#39;&amp;lt;/div&amp;gt;&amp;#39;;
    }
    
    echo &amp;#39;&amp;lt;/div&amp;gt;&amp;#39;;
    
    die; // 终止脚本执行
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;十六进制字符串&lt;/p&gt;</description>
    </item>
    <item>
      <title>常用 CSS 样式</title>
      <link>https://rengchi.github.io/posts/tech/css/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/css/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* 完全居中对齐 */
}

.vertical-centered {
    position: absolute;
    top: 50%;
    transform: translateY(-50%); /* 仅垂直居中 */
}

.text-ellipsis {
    width: 100px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; /* 超出部分省略号显示 */
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>第三方库</title>
      <link>https://rengchi.github.io/posts/tech/3rd-pkg/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/3rd-pkg/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/williammustaffa/jquery.dad.js&#34;&gt;williammustaffa/jquery.dad.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/SortableJS/Sortable&#34;&gt;SortableJS/Sortable&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/craftpip/jquery-confirm&#34;&gt;craftpip/jquery-confirm&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;useBootstrap: false, // 自定义宽度
boxWidth: &amp;#39;30%&amp;#39;,
onOpenBefore: function () {
    this.$content.css(&amp;#39;height&amp;#39;, &amp;#39;500px&amp;#39;); // 自定义高度
},
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>IDE</title>
      <link>https://rengchi.github.io/posts/env/windows/ide/</link>
      <pubDate>Mon, 20 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/env/windows/ide/</guid>
      <description>编辑器配置相关</description>
    </item>
    <item>
      <title>Linux 初始化</title>
      <link>https://rengchi.github.io/posts/env/linux/init/</link>
      <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/env/linux/init/</guid>
      <description>测试服务器环境：Huawei Cloud EulerOS 2.0</description>
    </item>
    <item>
      <title>Windows 重装相关</title>
      <link>https://rengchi.github.io/posts/env/windows/init/</link>
      <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/env/windows/init/</guid>
      <description>重装Windows后准备，避免数据全部存储在C盘</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://rengchi.github.io/posts/tech/git/</link>
      <pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/tech/git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34;&gt;&lt;strong&gt;&lt;em&gt;&lt;code&gt;官方文档&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;裸仓库&#34;&gt;裸仓库&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E5%8D%8F%E8%AE%AE&#34;&gt;服务器上的 Git&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;设置默认分支为 &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PS D:\&amp;gt; git config --global init.defaultBranch main
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;初始一个测试仓库 &lt;code&gt;test.git&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PS D:\data\git\repo&amp;gt; git init --bare test.git
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;测试&lt;/p&gt;&lt;/blockquote&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PS D:\data\git\repo&amp;gt; git clone D:/data/git/repo/test.git D:/data/git/repo/test
Cloning into &amp;#39;D:/data/git/repo/test&amp;#39;...
warning: You appear to have cloned an empty repository.
done.
PS D:\data\git\repo&amp;gt; cd .\test\
PS D:\data\git\repo\test&amp;gt; ls
PS D:\data\git\repo\test&amp;gt; echo &amp;#34;Hello, Git&amp;#34; &amp;gt; file.txt
PS D:\data\git\repo\test&amp;gt; git add file.txt
PS D:\data\git\repo\test&amp;gt; git commit -m &amp;#34;Add file.txt&amp;#34;
[main (root-commit) ac38950] Add file.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file.txt
PS D:\data\git\repo\test&amp;gt; git push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 240 bytes | 240.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To D:/data/git/repo/test.git
 * [new branch]      main -&amp;gt; main
PS D:\data\git\repo\test&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;h2 id=&#34;tag&#34;&gt;tag&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE&#34;&gt;2.6 打标签&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 开发初始化</title>
      <link>https://rengchi.github.io/posts/env/windows/dev/</link>
      <pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://rengchi.github.io/posts/env/windows/dev/</guid>
      <description>windows 环境配置</description>
    </item>
  </channel>
</rss>
