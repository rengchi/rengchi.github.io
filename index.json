[{"content":"写在前面 当然，如果你使用 docker 宝塔 等搭建，就不需这么麻烦的编译安装了，可以忽略\n准备 2222 是 ssh 新的自定义端口，使用了 sed -i 行数部分请先查看\n#!/bin/bash # cls 命令添加 ln -s /usr/bin/clear /usr/local/bin/cls # 防火墙 systemctl start firewalld.service firewall-cmd --zone=public --add-port=80/tcp --permanent firewall-cmd --zone=public --add-port=443/tcp --permanent firewall-cmd --zone=public --add-port=2222/tcp --permanent # 重启 systemctl restart firewalld # 开机启动 systemctl enable firewalld.service # 列表查看 # firewall-cmd --list-ports # ssh cd /etc/ssh cp sshd_config sshd_config.bak sed -i \u0026#39;21s/#Port 22/Port 2222/\u0026#39; sshd_config cd /etc # 主机名称 cp hostname hostname.bak echo \u0026#34;Rengchi\u0026#34; \u0026gt; hostname cd /etc/ cp sysctl.conf sysctl.conf.bak sed -i \u0026#39;$a vm.overcommit_memory = 1\u0026#39; /etc/sysctl.conf sudo sed -i \u0026#39;$a net.ipv4.tcp_max_syn_backlog = 4096\u0026#39; /etc/sysctl.conf sudo sed -i \u0026#39;$a net.ipv4.tcp_fin_timeout = 15\u0026#39; /etc/sysctl.conf sysctl -p reboot .vimrc vim 目录 cd mkdir .vim .vim/backup .vim/undo \u0026#34; 让配置变更立即生效 autocmd BufWritePost $MYVIMRC source $MYVIMRC \u0026#34; 基础设置 set nocompatible \u0026#34; 不兼容 vi set noswapfile \u0026#34; 不生成 swap 文件 set autowrite \u0026#34; 设置自动保存 set confirm \u0026#34; 未保存或只读文件时弹出确认框 set number \u0026#34; 显示行号 set autoindent \u0026#34; 自动缩进 set smartindent \u0026#34; 智能缩进 \u0026#34; set mouse=a \u0026#34; 启用鼠标支持 syntax on \u0026#34; 开启语法高亮 \u0026#34; Tab 和缩进设置 set tabstop=4 \u0026#34; 设置 Tab 为 4 个空格 set shiftwidth=4 \u0026#34; 设置缩进宽度为 4 个空格 set softtabstop=4 \u0026#34; 设置 Tab 为 4 个空格 set expandtab \u0026#34; 用空格替代 Tab \u0026#34; 编码设置 set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936 set termencoding=utf-8 set encoding=utf-8 \u0026#34; 自动加载 set autoread \u0026#34; 文本显示设置 set linebreak \u0026#34; 不换行断字 set showmatch \u0026#34; 高亮匹配括号 set cursorline \u0026#34; 突出显示当前行 set ruler \u0026#34; 打开状态栏标尺 \u0026#34; 搜索设置 set hlsearch \u0026#34; 搜索时高亮匹配的词 set incsearch \u0026#34; 边输入边搜索 set ignorecase \u0026#34; 搜索时忽略大小写 set smartcase \u0026#34; 当搜索包含大写字母时，搜索区分大小写 \u0026#34; 中文帮助设置 set helplang=cn \u0026#34; 设置中文帮助 set ambiwidth=double \u0026#34; 设置双字宽显示，防止字符不完整 \u0026#34; 备份与撤销文件设置 set backup \u0026#34; 开启备份文件 set backupdir=~/.vim/backup \u0026#34; 设置备份文件存放路径 set undofile \u0026#34; 开启撤销历史记录文件 set undodir=~/.vim/undo \u0026#34; 设置撤销文件存放路径 \u0026#34; 快捷键映射 let mapleader = \u0026#34;,\u0026#34; \u0026#34; 定义 \u0026lt;leader\u0026gt; 键 nnoremap \u0026lt;leader\u0026gt;e :e ~/.vimrc\u0026lt;cr\u0026gt; \u0026#34; 快速打开 vim 配置文件 nnoremap \u0026lt;leader\u0026gt;r :source $MYVIMRC\u0026lt;cr\u0026gt; \u0026#34; 刷新配置 nnoremap \u0026lt;c-d\u0026gt; yyp \u0026#34; Ctrl+d 复制本行并粘贴到下一行 inoremap ;; \u0026lt;Esc\u0026gt; \u0026#34; 将 ESC 键映射为两次 ; 键 nnoremap \u0026lt;leader\u0026gt;q :q\u0026lt;cr\u0026gt; \u0026#34; \u0026lt;leader\u0026gt;+q 快速退出 vim inoremap \u0026lt;leader\u0026gt;q \u0026lt;Esc\u0026gt;:q\u0026lt;cr\u0026gt; nnoremap \u0026lt;leader\u0026gt;s :w\u0026lt;cr\u0026gt; \u0026#34; \u0026lt;leader\u0026gt;+s 快速保存 inoremap \u0026lt;leader\u0026gt;s \u0026lt;Esc\u0026gt;:w\u0026lt;cr\u0026gt; \u0026#34; 插入模式、正常模式按 Ctrl+u 快速转换为大写 inoremap \u0026lt;c-u\u0026gt; \u0026lt;esc\u0026gt;viwUea nnoremap \u0026lt;c-u\u0026gt; viwUe \u0026#34; 文件头部签名信息管理 nmap \u0026lt;F6\u0026gt; ms:call TitleDet() \u0026lt;cr\u0026gt;\u0026#39;s function AddTitle() call append (0,\u0026#34;/*********************************************************************\u0026#34;) call append (1,\u0026#34; * Author : 仍迟\u0026#34;) call append (2,\u0026#34; * Create At : \u0026#34;.strftime(\u0026#34;%Y-%m-%d %H:%M\u0026#34;)) call append (3,\u0026#34; * Filename : \u0026#34;.expand(\u0026#34;%:t\u0026#34;)) call append (4,\u0026#34; * Description : 知之行之，无负今日\u0026#34;) call append (5,\u0026#34; * ******************************************************************/\u0026#34;) echohl WarningMsg | echo \u0026#34;Adding copyright Successfully !!\u0026#34; | echohl None endfunction function UpdateTitle() normal m\u0026#39; execute \u0026#39;/* Last modified\\s*:/s@:.*$@\\=strftime(\u0026#34;: %Y-%m-%d %H:%M\u0026#34;)@\u0026#39; normal \u0026#39;\u0026#39; normal mk execute \u0026#39;/* Filename\\s*:/s@:.*$@\\=\u0026#34;: \u0026#34;.expand(\u0026#34;%:t\u0026#34;)@\u0026#39; execute \u0026#34;noh\u0026#34; normal \u0026#39;k echohl WarningMsg | echo \u0026#34;Updating copyright Successfully !!\u0026#34; | echohl None endfunction function TitleDet() let n=1 while n\u0026lt;8 let line = getline(n) if line =~ \u0026#39;^\\s*\\*\\s*Last\\smodified\\s*:\\s*\\S*.*$\u0026#39; call UpdateTitle() return endif let n = n+1 endwhile call AddTitle() endfunction \u0026#34; 查找与替换 nnoremap \u0026lt;C-f\u0026gt; / nnoremap \u0026lt;C-h\u0026gt; :%s/ nnoremap \u0026lt;leader\u0026gt;sf :!grep -ri \u0026#34; 允许光标键跨行，光标可以出现在最后一个字符后 set whichwrap+=\u0026lt;,\u0026gt;,h,l set virtualedit=block,onemore 环境安装目录 /data 目录有可以使用重复，需要先查看是否存在\n/fate 目录为存储配置文件目录\ncd mkdir /env /logs /download /third /daemon /data /proj mkdir /logs/openresty /logs/openresty/proxy_temp /logs/redis /logs/mysql /fate mkdir /third/mysql mkdir /fate/openresty /fate/openresty/lua /fate/openresty/conf.d /fate/redis /fate/mysql mkdir /daemon/openresty /daemon/redis /daemon/mysql mkdir /data/mysql /data/mysql/data /data/mysql/mysql-files mkdir /proj/html /proj/go chmod 755 /env /fate /data /download /proj chmod -R 755 /logs/openresty /daemon /proj/html chmod 777 /logs go（可选） go 项目直接把打包后的放在服务器上运行就可以，或者使用 docker\n安装 cd /download wget https://golang.google.cn/dl/go1.23.5.linux-amd64.tar.gz tar -zxf go1.23.5.linux-amd64.tar.gz mv /download/go /env/ rm -rf /download/go ln -s /env/go/bin/* /usr/local/bin/ go env -w GOPATH=/proj/go go env -w GOROOT=/env/go go env -w GOBIN=/proj/go/bin go env -w GOPROXY=https://goproxy.cn,direct go env -w GOCACHE=/logs/go/go-build go env -w GOMODCACHE=/logs/go/pkg/mod go env -w GO111MODULE=on 命令自动补全 中途需要输入一个 y\ngo install github.com/posener/complete/gocomplete@latest /proj/go/bin/gocomplete -install 环境变量 ln -s /proj/go/bin/* /usr/local/bin/ git 安装 cd /download yum install zlib-devel -y wget https://www.kernel.org/pub/software/scm/git/git-2.47.1.tar.gz tar -zxf git-2.47.1.tar.gz cd git-2.47.1 ./configure --prefix=/env/git make -j$(nproc) make install ln -s /env/git/bin/* /usr/local/bin 命令自动补全 ！注 ./root/.bashrc\ncd wget https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash mv /root/git-completion.bash /etc/bash_completion.d/ cat \u0026gt;\u0026gt; .bashrc \u0026lt;\u0026lt; EOF if [ -f /etc/bash_completion.d/git-completion.bash ]; then . /etc/bash_completion.d/git-completion.bash fi EOF . /root/.bashrc 扩展 gitea ! 搭建中需要使用 mysql openresty 反代，需要在安装完成后最后配置\ngithub gitea 中文文档 下载\n! 请在阅读相关文档后安装，熟悉后再安装到生产环境 签名验证\nuseradd -r -m -d /home/gitea -s /bin/bash gitea su gitea cd wget https://github.com/go-gitea/gitea/releases/download/v1.22.5/gitea-1.22.5-linux-amd64 wget https://github.com/go-gitea/gitea/releases/download/v1.22.5/gitea-1.22.5-linux-amd64.asc gpg --edit-key 7C9E68152594688862D62AF62D9AE806EC1592E2 gpg --keyserver hkp://pgp.mit.edu --recv 7C9E68152594688862D62AF62D9AE806EC1592E2 gpg --verify gitea-1.22.5-linux-amd64.asc gitea-1.22.5-linux-amd64 mv gitea-1.22.5-linux-amd64 gitea chmod +x /home/gitea/gitea ./gitea web --port 3000 systemctl enable gitea systemctl start gitea systemctl status gitea gitea.service vim /etc/systemd/system/gitea.service\n[Unit] Description=Gitea Documentation=https://docs.gitea.io After=network.target [Service] User=gitea Group=gitea ExecStart=/home/gitea/gitea web RestartSec=3 Restart=always Environment=GITEA_WORK_DIR=/home/gitea Environment=GITEA_CUSTOM=/home/gitea/custom WorkingDirectory=/home/gitea LimitNOFILE=4096 [Install] WantedBy=multi-user.target gitea.conf 如果开启 https 的话，注意证书配置项\n# gitea server { listen 80; server_name gitea.yourhost.com; return 301 https://$server_name$request_uri; } server { listen 443 ssl; server_name gitea.yourhost.com; # 强制浏览器使用 HTTPS add_header Strict-Transport-Security \u0026#34;max-age=31536000; includeSubDomains\u0026#34; always; ssl_certificate /data/openresty/cert/gitea.yourhost.com/fullchain.pem; ssl_certificate_key /data/openresty/cert/gitea.yourhost.com/privkey.pem; ssl_protocols TLSv1.2 TLSv1.3; # 仅支持 TLSv1.2 和 TLSv1.3 ssl_ciphers \u0026#39;TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:...\u0026#39;; # 选择安全的加密套件 ssl_prefer_server_ciphers on; # 强制服务器优先选择加密套件 ssl_session_cache shared:SSL:1m; ssl_session_timeout 5m; access_log /logs/openresty/gitea.access.log; error_log /logs/openresty/gitea.error.log; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Range $http_range; proxy_set_header If-Range $http_if_range; proxy_redirect off; proxy_pass http://127.0.0.1:3000; } } openresty openresty 官网\n安装 服务器不能直接使用 yum 安装，这里选择下载编译安装\nyum install pcre-devel zlib-devel openssl-devel geoip-devel jemalloc-devel -y cd /download wget https://mirrors.huaweicloud.com/openresty/v1.25.3.2/openresty-1.25.3.2.tar.gz tar -zxf openresty-1.25.3.2.tar.gz cd /download/openresty-1.25.3.2 ./configure --prefix=/env/openresty \\ --conf-path=/fate/openresty/nginx.conf \\ --error-log-path=/logs/openresty/error.log \\ --http-log-path=/logs/openresty/access.log \\ --pid-path=/daemon/openresty/openresty.pid \\ --with-http_v2_module \\ --with-http_realip_module \\ --with-http_stub_status_module \\ --with-luajit \\ --with-cc=gcc \\ --with-stream \\ --with-stream_ssl_module \\ --with-http_ssl_module \\ --with-http_sub_module \\ --with-http_secure_link_module \\ --with-http_gzip_static_module \\ --with-http_auth_request_module \\ --with-pcre-jit \\ --with-threads \\ --with-http_geoip_module \\ --with-poll_module \\ --with-ld-opt=\u0026#34;-ljemalloc\u0026#34; \\ --with-http_dav_module \\ --with-http_flv_module \\ --with-http_mp4_module \\ --with-http_slice_module \\ --with-file-aio gmake -j$(nproc) gmake install groupadd -r openresty useradd -r -g openresty -s /sbin/nologin openresty ln -s /env/openresty/bin/openresty /usr/local/bin/ chmod 755 /env/openresty chown -R openresty:openresty /env/openresty chmod 644 /env/openresty/lualib chown -R openresty:openresty /env/openresty/lualib/ chmod -R 644 /env/openresty/lualib/resty chown -R openresty:openresty /env/openresty/lualib/resty chmod -R 755 /proj/html chmod 755 /fate/openresty chown -R openresty:openresty /fate/openresty chmod -R 644 /fate/openresty/conf.d chown -R openresty:openresty /fate/openresty/conf.d 开机自动启动 openresty # chkconfig: - 60 80\nvim /etc/init.d/openresty chmod +x /etc/init.d/openresty chkconfig --add openresty chkconfig openresty on #!/bin/bash # chkconfig: - 60 80 # OpenResty 服务初始化脚本 # 用于在系统启动时启动 OpenResty，及在运行时进行管理 nginxd=/env/openresty/nginx/sbin/nginx nginx_config=/fate/openresty/nginx.conf nginx_pid=/daemon/openresty/openresty.pid RETVAL=0 prog=\u0026#34;OpenResty\u0026#34; # 导入函数库 . /etc/rc.d/init.d/functions # 导入网络配置 . /etc/sysconfig/network # 检查网络是否启动 [ ${NETWORKING} = \u0026#34;no\u0026#34; ] \u0026amp;\u0026amp; exit 0 # 检查 nginx 可执行文件是否存在 [ -x $nginxd ] || exit 0 # 启动 OpenResty 服务 start() { if [ -e $nginx_pid ]; then echo \u0026#34;$prog 已经在运行...\u0026#34; exit 1 fi echo -n $\u0026#34;启动 $prog: \u0026#34; daemon $nginxd -c ${nginx_config} RETVAL=$? echo [ $RETVAL = 0 ] \u0026amp;\u0026amp; touch /daemon/openresty/openresty.lock return $RETVAL } # 停止 OpenResty 服务 stop() { echo -n $\u0026#34;停止 $prog: \u0026#34; killproc $nginxd RETVAL=$? echo [ $RETVAL = 0 ] \u0026amp;\u0026amp; rm -f /daemon/openresty/openresty.lock $nginx_pid } # 重新加载 OpenResty 配置 reload() { echo -n $\u0026#34;重新加载 $prog: \u0026#34; killproc $nginxd -HUP RETVAL=$? echo } # 根据传入的参数执行相应操作 case \u0026#34;$1\u0026#34; in start) start ;; stop) stop ;; reload) reload ;; restart) stop start ;; status) status $nginxd RETVAL=$? ;; *) echo $\u0026#34;用法: $prog {start|stop|status|restart|reload}\u0026#34; exit 1 esac exit $RETVAL nginx.conf 示例 user openresty; worker_processes auto; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; # pid pid /daemon/openresty/openresty.pid; events { worker_connections 1024; } http { # 定义新的临时目录 proxy_temp_path /logs/openresty/proxy_temp; include mime.types; default_type application/octet-stream; log_format main \u0026#39;$remote_addr - $remote_user [$time_local] \u0026#34;$request\u0026#34; \u0026#39; \u0026#39;$status $body_bytes_sent \u0026#34;$http_referer\u0026#34; \u0026#39; \u0026#39;\u0026#34;$http_user_agent\u0026#34; \u0026#34;$http_x_forwarded_for\u0026#34; \u0026#39; \u0026#39;\u0026#34;$http_x_real_ip\u0026#34; \u0026#34;$http_x_forwarded_host\u0026#34; \u0026#39; \u0026#39;\u0026#34;$http_x_forwarded_proto\u0026#34;\u0026#39; \u0026#39;\u0026#34;$request_time\u0026#34; \u0026#34;$upstream_addr\u0026#34; \u0026#34;$upstream_response_time\u0026#34;\u0026#39;; # access_log /log/openresty/access.log main; sendfile on; # 大文件处理 tcp_nopush on; # 大文件处理 # 客户端连接在 Keep-Alive 状态下保持打开的时间（秒） keepalive_timeout 30; gzip on; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; gzip_min_length 1024; gzip_proxied any; gzip_disable \u0026#34;msie6\u0026#34;; gzip_vary on; # 隐藏服务器信息版本号 server_tokens off; # 移除不需要的响应头部（需要 ngx_headers_more 模块） more_clear_headers \u0026#34;X-Powered-By\u0026#34;; more_clear_headers \u0026#34;Server\u0026#34;; more_clear_headers \u0026#34;X-Content-Type-Options\u0026#34;; # 上传文件 client_max_body_size 10M; client_body_buffer_size 8M; # 定义共享内存区域 limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m; limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s; # 提高速率限制 # lua #access_by_lua_file \u0026#34;lua 文件目录\u0026#34;; add_header X-HTTP-Method-Override \u0026#34;\u0026#34;; # 禁用伪造的方法 # 可以增强浏览器的安全性，防止 XSS 攻击和其他安全漏洞 add_header X-Content-Type-Options nosniff always; # 防止 MIME 类型嗅探 # 禁用跨站请求伪造（CSRF） add_header Referrer-Policy \u0026#34;no-referrer\u0026#34;; # 防止点击劫持，相同域名iframe引用 # add_header X-Frame-Options SAMEORIGIN; add_header X-XSS-Protection \u0026#34;1; mode=block\u0026#34; always; # 防止跨站脚本攻击 (XSS) add_header X-Content-Type-Options \u0026#34;nosniff\u0026#34;; # 防止浏览器解读响应的MIME类型 add_header X-Frame-Options \u0026#34;DENY\u0026#34;; # 防止点击劫持（Clickjacking） add_header Set-Cookie \u0026#34;name=value; SameSite=Strict\u0026#34;; # 防止跨站请求伪造 (CSRF) # 启用 Content Security Policy (CSP), 设置 CSP 头以防止外部脚本和资源的加载，从而防止 XSS 攻击 add_header X-Content-Security-Policy \u0026#34;default-src \u0026#39;self\u0026#39;; script-src \u0026#39;self\u0026#39;; object-src \u0026#39;none\u0026#39;; style-src \u0026#39;self\u0026#39;; frame-ancestors \u0026#39;none\u0026#39;;\u0026#34;; # CSP 防范攻击 add_header Content-Security-Policy \u0026#34;default-src \u0026#39;self\u0026#39;; script-src \u0026#39;self\u0026#39;; object-src \u0026#39;none\u0026#39;; style-src \u0026#39;self\u0026#39;;\u0026#34;; # cache 配置 proxy_cache_path /logs/openresty/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off; proxy_cache_key \u0026#34;$scheme$request_method$host$request_uri\u0026#34;; # www # include /fate/openresty/conf.d/www.conf; } conf.d/security.conf vim /fate/openresty/conf.d/security.conf chmod -R 644 /fate/openresty/conf.d # 限制对敏感文件的访问 location ~ /\\. { deny all; } location ~ /\\.git { deny all; } # 禁用不必要的 HTTP 方法 if ($request_method !~ ^(GET|POST|HEAD)$) { return 405; } https 证书 pip config set global.cache-dir \u0026#34;/logs/python/pip\u0026#34; pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ pip install certbot certbot-nginx certbot certonly # letsencrypt链接，在使用certbot certonly后执行 # 也可以直接写在etc目录中的证书地址在openresty中 ln -s /etc/letsencrypt/live/ /data/openresty/cert # 生成的证书列表 certbot certificates # 删除生成的证书 certbot delete --cert-name \u0026lt;certificate_name_or_domain\u0026gt; # 刷新证书 certbot renew 定时任务相关 crontab -e # 输入内容 # ... # 保存完成后重启 systemctl restart crond 日志轮转 vim /etc/logrotate.d/openresty 编辑文件时要 删除#注释\n/logs/openresty/*.log { daily # 每天轮转日志 rotate 7 # 保留7个日志文件 size 50M # 当日志文件超过50MB时进行轮转 compress # 轮转的日志进行压缩 missingok # 如果日志文件不存在，则不报错 notifempty # 如果日志为空，不进行轮转 create 0640 openresty openresty # 新创建的日志文件权限 } # 强制执行，未达到50M也会生成.gz文件 logrotate -f /etc/logrotate.d/openresty redis 官网 下载\nredis # chkconfig: - 50 90\n安装 \u0026amp; 配置 自定义端口修改 sed -i '139s/6379/1234/' redis.conf\ncd /download wget https://download.redis.io/releases/redis-7.4.0.tar.gz tar -zxf redis-7.4.0.tar.gz cd /download/redis-7.4.0 cd deps make hiredis lua jemalloc linenoise cd .. make -j$(nproc) make PREFIX=/env/redis install ln -s /env/redis/bin/* /usr/local/bin/ cp /download/redis-7.4.0/redis.conf /fate/redis/redis.conf.bak cp /download/redis-7.4.0/redis.conf /fate/redis/redis.conf cd /fate/redis sed -i \u0026#39;70s/^#\\s*//\u0026#39; redis.conf sed -i \u0026#39;156s/^#\\s*//\u0026#39; redis.conf sed -i \u0026#39;156s/\\/run/\\/daemon\\/redis/\u0026#39; redis.conf sed -i \u0026#39;157s/^#\\s*//\u0026#39; redis.conf sed -i \u0026#39;310s/no/yes/\u0026#39; redis.conf sed -i \u0026#39;342s/\\/var\\/run\\/redis_6379.pid/\\/daemon\\/redis\\/redis.pid/\u0026#39; redis.conf sed -i \u0026#39;356s/\u0026#34;\u0026#34;/\\/log\\/redis\\/redis.log/\u0026#39; redis.conf sed -i \u0026#39;1050s/^# requirepass foobared/requirepass redis/\u0026#39; redis.conf sed -i \u0026#39;1085s/^#\\s*//\u0026#39; redis.conf sed -i \u0026#39;$ a\\rename-command FLUSHDB \u0026#34;\u0026#34;\\nrename-command FLUSHALL \u0026#34;\u0026#34;\u0026#39; redis.conf 开机自动启动 vim /etc/init.d/redis chmod +x /etc/init.d/redis chkconfig --add /etc/init.d/redis chkconfig redis on /etc/init.d/redis #!/bin/sh # chkconfig: - 50 90 # description: Redis 服务初始化脚本，用于在系统启动时启动 Redis，并在运行时进行管理 # Increase file descriptor limit # LimitNOFILE 是控制系统允许每个进程可以打开的最大文件描述符数。增加此限制可以防止 Redis 在处理大量并发连接时遇到 \u0026#34;too many open files\u0026#34; 错误。 # LimitNOFILE=10032 # 无效 # Redis 服务端口 REDISPORT=6379 # Redis 服务可执行文件路径 EXEC=/env/redis/bin/redis-server # Redis 客户端可执行文件路径 CLIEXEC=/env/redis/bin/redis-cli # PID 文件路径，用于记录 Redis 服务的进程 ID PIDFILE=/daemon/redis/redis.pid # Redis 配置文件路径 CONF=\u0026#34;/fate/redis/redis.conf\u0026#34; # Redis 服务密码 PASSWORD=\u0026#34;redis\u0026#34; # 根据传入的参数执行相应操作 case \u0026#34;$1\u0026#34; in start) # 启动 Redis 服务 if [ -f $PIDFILE ]; then echo \u0026#34;$PIDFILE 已存在，进程已经在运行或崩溃\u0026#34; else # 设置 Redis 所需的文件描述符限制 ulimit -n 10032 echo \u0026#34;正在启动 Redis 服务器...\u0026#34; $EXEC $CONF --requirepass $PASSWORD fi ;; stop) # 停止 Redis 服务 if [ ! -f $PIDFILE ]; then echo \u0026#34;$PIDFILE 不存在，进程未运行\u0026#34; else PID=$(cat $PIDFILE) echo \u0026#34;正在停止 Redis...\u0026#34; $CLIEXEC -p $REDISPORT -a $PASSWORD shutdown # 等待 Redis 进程完全停止 while [ -x /proc/${PID} ]; do echo \u0026#34;等待 Redis 停止...\u0026#34; sleep 1 done echo \u0026#34;Redis 已停止\u0026#34; fi ;; *) # 提示正确的使用方法 echo \u0026#34;请使用 start 或 stop 作为第一个参数\u0026#34; ;; esac 测试连接 redis-server /fate/redis/redis.conf redis-cli -p 6379 127.0.0.1:6379\u0026gt; AUTH redis OK 127.0.0.1:6379\u0026gt; ping PONG mysql 官网 下载 8.0.40\nmysql # chkconfig: - 55 85\nmy.cnf groupadd -r mysql useradd -r -g mysql -s /sbin/nologin mysql vim /fate/mysql/my.cnf [mysqld] # performance schema配置 performance-schema = 1 performance-schema-instrument = wait/lock/metadata/sql/mdl=ON # 启用更严格的权限检查 # 需要在 MySQL 启动时通过 --skip-grant-tables 禁用授权表 skip-grant-tables=0 # 设置 MySQL 安装目录 basedir=/env/mysql # 设置 MySQL 数据目录 datadir=/data/mysql/data # 设置 socket 文件路径 socket=/daemon/mysql/mysql.sock # 限制 LOAD DATA 和 SELECT ... INTO OUTFILE 操作的目录 secure-file-priv=/data/mysql/mysql-files # 运行 MySQL 的用户 user=mysql # PID 文件路径 pid-file=/daemon/mysql/mysql.pid # 最大连接数 max_connections=1000 # 设置线程缓存大小 thread_cache_size = 200 # 根据连接数设置，减少线程创建和销毁的开销 # 设置每个线程的堆栈大小 thread_stack = 192K # 适当调整 # 设置排序操作的缓冲区大小 sort_buffer_size = 4M # 调整排序操作的内存缓存大小 # 设置读取数据的缓冲区大小 read_buffer_size = 4M # 用于扫描大数据表的查询 # 设置表缓存数量 table_open_cache = 1024 # 根据您的表数量和查询频率设置 # 默认字符集和校对规则 character-set-server=utf8mb4 collation-server=utf8mb4_general_ci # 默认存储引擎 default-storage-engine=INNODB # SQL 模式 sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION # 错误日志文件路径 log-error=/logs/mysql/mysql-error.log # 二进制日志文件路径 log-bin=/logs/mysql/mysql-bin.log # 二进制日志过期时间（7 天） binlog_expire_logs_seconds=604800 # 慢查询 slow_query_log = 1 slow_query_log_file = /logs/mysql/mysql-slow.log long_query_time = 2 # InnoDB 配置 innodb_buffer_pool_size=1G # 设置 InnoDB 缓冲池的大小，建议设置为物理内存的 70%-80%（对于数据库服务器） # innodb_log_file_size=256M # 根据事务量进行调整，mysql8.0以上不支持了，废弃 innodb_redo_log_capacity=1073741824 innodb_flush_log_at_trx_commit=2 # 1 最强的数据安全性，但可能会影响性能，特别是在高并发的环境中 2 性能和数据安全性之间提供了一个平衡点，适合大多数应用场景 0 最高的性能，但牺牲了数据安全性，适合对数据丢失容忍度较高的环境 innodb_file_per_table=1 innodb_flush_method=O_DIRECT innodb_read_io_threads = 4 # 增加读取线程数 innodb_write_io_threads = 4 # 增加写入线程数 # 接缓冲区的大小，适用于大数据表的连接操作 join_buffer_size = 8M # 临时表 tmp_table_size = 64M max_heap_table_size = 64M default_authentication_plugin=caching_sha2_password # 禁止root远程登录 # skip-networking # 如果你需要支持远程连接，不要启用 skip-networking skip-name-resolve # 如果你希望避免 DNS 解析带来的性能开销，并确保所有连接基于 IP 地址，可以启用 skip-name-resolve，但要确保所有权限配置都使用 IP 地址，而不是主机名 # 读写分离 # 对于负载较重的系统，设置读写分离，主库处理写操作，从库处理读操作，可以显著提升性能。 replicate-do-db=db1 read_only=1 # 设置从库为只读 # 密钥策略 # validate-password-policy=STRONG # validate-password-length=12 # 禁用符号链接 \u0026amp; 禁用 LOAD DATA LOCAL INFILE 功能 # skip-symbolic-links # 不需要显示定义了 local-infile=0 [client] # 客户端配置 port=3306 socket=/daemon/mysql/mysql.sock # 包含额外的配置文件 # !includedir /etc/mysql/conf.d/ rpcsvc-proto cd /download wget https://github.com/thkukuk/rpcsvc-proto/releases/download/v1.4.4/rpcsvc-proto-1.4.4.tar.xz tar xf rpcsvc-proto-1.4.4.tar.xz cd rpcsvc-proto-1.4.4/ ./configure make -j$(nproc) \u0026amp;\u0026amp; make install 安装 cd /third/mysql wget https://archives.boost.io/release/1.77.0/source/boost_1_77_0.tar.bz2 tar -xjf /third/mysql/boost_1_77_0.tar.bz2 -C /third/mysql/ yum install openssl-devel rpcgen libtirpc-devel gcc-c++ ncurses-devel cmake libevent-devel lz4-devel libudev-devel bison openldap-devel cyrus-sasl-devel m4 -y cd /download wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.40.tar.gz tar -zxf mysql-8.0.40.tar.gz cd /download/mysql-8.0.40/ mkdir build cd build cmake .. -DCMAKE_INSTALL_PREFIX=/env/mysql \\ -DMYSQL_DATADIR=/data/mysql/data \\ -DSYSCONFDIR=/fate/mysql \\ -DMYSQL_UNIX_ADDR=/daemon/mysql/mysql.sock \\ -DDEFAULT_CHARSET=utf8mb4 \\ -DDEFAULT_COLLATION=utf8mb4_general_ci \\ -DWITH_MYISAM_STORAGE_ENGINE=1 \\ -DWITH_INNOBASE_STORAGE_ENGINE=1 \\ -DENABLED_LOCAL_INFILE=1 \\ -DMYSQL_TCP_PORT=3306 \\ -DWITH_DEBUG=0 \\ -DWITH_SSL=system \\ -DWITH_SYSTEMD=1 \\ -DMYSQL_MAINTAINER_MODE=0 \\ -DDOWNLOAD_BOOST=1 \\ -DWITH_BOOST=/third/mysql/boost_1_77_0 \\ -DWITH_LZ4=system \\ -DWITH_ZLIB=bundled \\ -DWITH_LIBEVENT=system make -j$(nproc) make install ln -s /env/mysql/bin/* /usr/local/bin 开机自动启动 cp /download/mysql-8.0.40/build/scripts/mysqld.service /etc/systemd/system/mysqld.service systemctl enable mysqld 初始化 chmod 755 /logs/mysql /data/mysql /data/mysql/data /fate/mysql /daemon/mysql chown -R mysql:mysql /env/mysql /fate/mysql /data/mysql /logs/mysql /daemon/mysql /data/mysql/mysql-files chmod 700 /data/mysql/mysql-files chown -R mysql:mysql /env/mysql /fate/mysql /data/mysql /logs/mysql /daemon/mysql /data/mysql/mysql-files mysqld --initialize --user=mysql --basedir=/env/mysql --datadir=/data/mysql/data cat /logs/mysql/mysql-error.log 配置 systemctl start mysqld mysql -uroot -p systemctl restart mysqld sql 如何安装 gitea 可以创建一个 gitea的数据库\nALTER USER root@localhost IDENTIFIED WITH caching_sha2_password BY \u0026#39;your_root_passwd\u0026#39;; update mysql.user set host = \u0026#39;localhost\u0026#39; WHERE user = \u0026#39;root\u0026#39; AND host != \u0026#39;localhost\u0026#39;; create database gitea; create user \u0026#39;gitea\u0026#39;@\u0026#39;127.0.0.1\u0026#39; identified by \u0026#39;your_gitea_passwd\u0026#39;; grant all privileges on gitea.* to \u0026#39;gitea\u0026#39;@\u0026#39;127.0.0.1\u0026#39;; # 删除权限 # DROP USER \u0026#39;gitea\u0026#39;@\u0026#39;127.0.0.1\u0026#39;; update mysql.user set Process_priv = \u0026#39;Y\u0026#39; where user = \u0026#39;gitea\u0026#39;; flush privileges; quit; ","permalink":"https://rengchi.github.io/posts/env/linux/init/","summary":"\u003ch1 id=\"写在前面\"\u003e写在前面\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当然，如果你使用 \u003ccode\u003edocker\u003c/code\u003e \u003ccode\u003e宝塔\u003c/code\u003e 等搭建，就不需这么麻烦的编译安装了，可以忽略\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"准备\"\u003e准备\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e2222\u003c/code\u003e 是 ssh 新的自定义端口，\u003cstrong\u003e\u003cem\u003e使用了 \u003ccode\u003esed -i 行数\u003c/code\u003e部分请先查看\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e#!/bin/bash\n# cls 命令添加\nln -s /usr/bin/clear /usr/local/bin/cls\n# 防火墙\nsystemctl start firewalld.service\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\nfirewall-cmd --zone=public --add-port=443/tcp --permanent\nfirewall-cmd --zone=public --add-port=2222/tcp --permanent\n# 重启\nsystemctl restart firewalld\n# 开机启动\nsystemctl enable firewalld.service\n# 列表查看\n# firewall-cmd --list-ports\n# ssh\ncd /etc/ssh\ncp sshd_config sshd_config.bak\nsed -i \u0026#39;21s/#Port 22/Port 2222/\u0026#39; sshd_config\ncd /etc\n# 主机名称\ncp hostname hostname.bak\necho \u0026#34;Rengchi\u0026#34; \u0026gt; hostname\ncd /etc/\ncp sysctl.conf sysctl.conf.bak\nsed -i \u0026#39;$a vm.overcommit_memory = 1\u0026#39; /etc/sysctl.conf\nsudo sed -i \u0026#39;$a net.ipv4.tcp_max_syn_backlog = 4096\u0026#39; /etc/sysctl.conf\nsudo sed -i \u0026#39;$a net.ipv4.tcp_fin_timeout = 15\u0026#39; /etc/sysctl.conf\nsysctl -p\nreboot\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"vimrc\"\u003e.vimrc\u003c/h1\u003e\n\u003ch2 id=\"vim-目录\"\u003evim 目录\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecd\nmkdir .vim .vim/backup .vim/undo\n\u003c/code\u003e\u003c/pre\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026#34; 让配置变更立即生效\nautocmd BufWritePost $MYVIMRC source $MYVIMRC\n\n\u0026#34; 基础设置\nset nocompatible            \u0026#34; 不兼容 vi\nset noswapfile              \u0026#34; 不生成 swap 文件\nset autowrite               \u0026#34; 设置自动保存\nset confirm                 \u0026#34; 未保存或只读文件时弹出确认框\nset number                  \u0026#34; 显示行号\nset autoindent              \u0026#34; 自动缩进\nset smartindent             \u0026#34; 智能缩进\n\u0026#34; set mouse=a                 \u0026#34; 启用鼠标支持\nsyntax on                   \u0026#34; 开启语法高亮\n\n\u0026#34; Tab 和缩进设置\nset tabstop=4               \u0026#34; 设置 Tab 为 4 个空格\nset shiftwidth=4            \u0026#34; 设置缩进宽度为 4 个空格\nset softtabstop=4           \u0026#34; 设置 Tab 为 4 个空格\nset expandtab               \u0026#34; 用空格替代 Tab\n\n\u0026#34; 编码设置\nset fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\nset termencoding=utf-8\nset encoding=utf-8\n\n\u0026#34; 自动加载\nset autoread\n\n\u0026#34; 文本显示设置\nset linebreak               \u0026#34; 不换行断字\nset showmatch               \u0026#34; 高亮匹配括号\nset cursorline              \u0026#34; 突出显示当前行\nset ruler                   \u0026#34; 打开状态栏标尺\n\n\u0026#34; 搜索设置\nset hlsearch                \u0026#34; 搜索时高亮匹配的词\nset incsearch               \u0026#34; 边输入边搜索\nset ignorecase              \u0026#34; 搜索时忽略大小写\nset smartcase               \u0026#34; 当搜索包含大写字母时，搜索区分大小写\n\n\u0026#34; 中文帮助设置\nset helplang=cn             \u0026#34; 设置中文帮助\nset ambiwidth=double        \u0026#34; 设置双字宽显示，防止字符不完整\n\n\u0026#34; 备份与撤销文件设置\nset backup                  \u0026#34; 开启备份文件\nset backupdir=~/.vim/backup  \u0026#34; 设置备份文件存放路径\nset undofile                \u0026#34; 开启撤销历史记录文件\nset undodir=~/.vim/undo      \u0026#34; 设置撤销文件存放路径\n\n\u0026#34; 快捷键映射\nlet mapleader = \u0026#34;,\u0026#34;         \u0026#34; 定义 \u0026lt;leader\u0026gt; 键\nnnoremap \u0026lt;leader\u0026gt;e :e ~/.vimrc\u0026lt;cr\u0026gt;           \u0026#34; 快速打开 vim 配置文件\nnnoremap \u0026lt;leader\u0026gt;r :source $MYVIMRC\u0026lt;cr\u0026gt;      \u0026#34; 刷新配置\nnnoremap \u0026lt;c-d\u0026gt; yyp                          \u0026#34; Ctrl+d 复制本行并粘贴到下一行\ninoremap ;; \u0026lt;Esc\u0026gt;                           \u0026#34; 将 ESC 键映射为两次 ; 键\nnnoremap \u0026lt;leader\u0026gt;q :q\u0026lt;cr\u0026gt;                   \u0026#34; \u0026lt;leader\u0026gt;+q 快速退出 vim\ninoremap \u0026lt;leader\u0026gt;q \u0026lt;Esc\u0026gt;:q\u0026lt;cr\u0026gt;\nnnoremap \u0026lt;leader\u0026gt;s :w\u0026lt;cr\u0026gt;                   \u0026#34; \u0026lt;leader\u0026gt;+s 快速保存\ninoremap \u0026lt;leader\u0026gt;s \u0026lt;Esc\u0026gt;:w\u0026lt;cr\u0026gt;\n\n\u0026#34; 插入模式、正常模式按 Ctrl+u 快速转换为大写\ninoremap \u0026lt;c-u\u0026gt; \u0026lt;esc\u0026gt;viwUea\nnnoremap \u0026lt;c-u\u0026gt; viwUe\n\n\u0026#34; 文件头部签名信息管理\nnmap \u0026lt;F6\u0026gt; ms:call TitleDet() \u0026lt;cr\u0026gt;\u0026#39;s\nfunction AddTitle()\n    call append (0,\u0026#34;/*********************************************************************\u0026#34;)\n    call append (1,\u0026#34; * Author           : 仍迟\u0026#34;)\n    call append (2,\u0026#34; * Create At        : \u0026#34;.strftime(\u0026#34;%Y-%m-%d %H:%M\u0026#34;))\n    call append (3,\u0026#34; * Filename         : \u0026#34;.expand(\u0026#34;%:t\u0026#34;))\n    call append (4,\u0026#34; * Description      : 知之行之，无负今日\u0026#34;)\n    call append (5,\u0026#34; * ******************************************************************/\u0026#34;)\n    echohl WarningMsg | echo \u0026#34;Adding copyright Successfully !!\u0026#34; | echohl None\nendfunction\nfunction UpdateTitle()\n    normal m\u0026#39;\n    execute \u0026#39;/* Last modified\\s*:/s@:.*$@\\=strftime(\u0026#34;: %Y-%m-%d %H:%M\u0026#34;)@\u0026#39;\n    normal \u0026#39;\u0026#39;\n    normal mk\n    execute \u0026#39;/* Filename\\s*:/s@:.*$@\\=\u0026#34;: \u0026#34;.expand(\u0026#34;%:t\u0026#34;)@\u0026#39;\n    execute \u0026#34;noh\u0026#34;\n    normal \u0026#39;k\n    echohl WarningMsg | echo \u0026#34;Updating copyright Successfully !!\u0026#34; | echohl None\nendfunction\nfunction TitleDet()\n    let n=1\n    while n\u0026lt;8\n       let line = getline(n)\n       if line =~ \u0026#39;^\\s*\\*\\s*Last\\smodified\\s*:\\s*\\S*.*$\u0026#39;\n        call UpdateTitle()\n    return\n       endif\n       let n = n+1\n    endwhile\n    call AddTitle()\nendfunction\n\n\u0026#34; 查找与替换\nnnoremap \u0026lt;C-f\u0026gt; /\nnnoremap \u0026lt;C-h\u0026gt; :%s/\nnnoremap \u0026lt;leader\u0026gt;sf :!grep -ri\n\n\u0026#34; 允许光标键跨行，光标可以出现在最后一个字符后\nset whichwrap+=\u0026lt;,\u0026gt;,h,l\nset virtualedit=block,onemore\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"环境安装目录\"\u003e环境安装目录\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003e/data\u003c/code\u003e 目录有可以使用重复，需要先查看是否存在\u003c/p\u003e","title":"Linux 初始化"},{"content":"写在前面 !注 命令中的 rengchi 为你的 windows 电脑上的 用户名，不一定是 rengchi\nc 盘下的目录并非全部都可以移动，请不要随意使用 mklink /j 移动 c 盘数据/目录\n命令 mkdir \u0026#34;D:\\data\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\captura\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\git\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\go\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\mysql\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\nvm\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\php\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\tencent\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\data\\vue\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\backup\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\temp\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\tmp\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\env\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\logs\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\other\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\proj\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\soft\u0026#34; 2\u0026gt;null mkdir \u0026#34;D:\\c\\Program Files\\Huawei\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\Program Files (x86)\\Google\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\Program Files (x86)\\Huawei\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\Program Files (x86)\\Tencent\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\Program Files (x86)\\WXWork\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\ProgramData\\Huawei\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\ProgramData\\chocolatey\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\c\\ProgramData\\ChocolateyHttpCache\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Program Files\\Huawei\u0026#34; \u0026#34;D:\\c\\Program Files\\Huawei\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Program Files (x86)\\Google\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Google\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Program Files (x86)\\Huawei\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Huawei\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Program Files (x86)\\Tencent\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Tencent\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Program Files (x86)\\WXWork\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\WXWork\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\ProgramData\\Huawei\u0026#34; \u0026#34;D:\\c\\ProgramData\\Huawei\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\ProgramData\\chocolatey\u0026#34; \u0026#34;D:\\c\\ProgramData\\chocolatey\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\ProgramData\\ChocolateyHttpCache\u0026#34; \u0026#34;D:\\c\\ProgramData\\ChocolateyHttpCache\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\.chocolatey\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\.vscode\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\.chocolatey\u0026#34; \u0026#34;D:\\rengchi\\.chocolatey\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\.vscode\u0026#34; \u0026#34;D:\\rengchi\\.vscode\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Adobe\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\CEF\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Composer\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Deloyment\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Google\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\gopls\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\npm-cache\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\PDFgear\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Programs\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Temp\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Tencent\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\xwalk\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Yarn\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\zig\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Adobe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Adobe\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\CEF\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\CEF\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Composer\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Composer\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Deloyment\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Deloyment\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Google\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Google\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\gopls\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\gopls\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\npm-cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\npm-cache\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\PDFgear\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\PDFgear\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Programs\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Programs\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Temp\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Temp\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Tencent\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Tencent\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\xwalk\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\xwalk\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Yarn\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Yarn\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\zig\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\zig\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Adobe\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\apifox\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Captura\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Code\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Composer\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\go\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Google\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\gopls\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; 2\u0026gt;nul mkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Adobe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Adobe\u0026#34; mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\apifox\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\apifox\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Captura\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Captura\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Code\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Code\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Composer\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Composer\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\go\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\go\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Google\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Google\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\gopls\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\gopls\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; 2\u0026gt;nul mklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; 2\u0026gt;nul ","permalink":"https://rengchi.github.io/posts/env/windows/init/","summary":"\u003ch2 id=\"写在前面\"\u003e写在前面\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003e!注\u003c/em\u003e\u003c/strong\u003e 命令中的 \u003ccode\u003erengchi\u003c/code\u003e 为你的 \u003ccode\u003ewindows\u003c/code\u003e 电脑上的 \u003ccode\u003e用户名\u003c/code\u003e，不一定是 \u003ccode\u003erengchi\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e\u003cem\u003ec 盘下的目录并非全部都可以移动，请不要随意使用 \u003ccode\u003emklink /j\u003c/code\u003e 移动 c 盘数据/目录\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"命令\"\u003e命令\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emkdir \u0026#34;D:\\data\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\captura\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\git\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\go\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\mysql\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\nvm\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\php\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\tencent\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\data\\vue\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\backup\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\temp\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\tmp\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\env\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\logs\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\other\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\proj\u0026#34; 2\u0026gt;null\nmkdir \u0026#34;D:\\soft\u0026#34; 2\u0026gt;null\n\n\nmkdir \u0026#34;D:\\c\\Program Files\\Huawei\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\Program Files (x86)\\Google\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\Program Files (x86)\\Huawei\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\Program Files (x86)\\Tencent\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\Program Files (x86)\\WXWork\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\ProgramData\\Huawei\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\ProgramData\\chocolatey\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\c\\ProgramData\\ChocolateyHttpCache\u0026#34; 2\u0026gt;nul\n\nmklink /j \u0026#34;C:\\Program Files\\Huawei\u0026#34; \u0026#34;D:\\c\\Program Files\\Huawei\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Program Files (x86)\\Google\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Google\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Program Files (x86)\\Huawei\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Huawei\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Program Files (x86)\\Tencent\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\Tencent\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Program Files (x86)\\WXWork\u0026#34; \u0026#34;D:\\c\\Program Files (x86)\\WXWork\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\ProgramData\\Huawei\u0026#34; \u0026#34;D:\\c\\ProgramData\\Huawei\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\ProgramData\\chocolatey\u0026#34; \u0026#34;D:\\c\\ProgramData\\chocolatey\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\ProgramData\\ChocolateyHttpCache\u0026#34; \u0026#34;D:\\c\\ProgramData\\ChocolateyHttpCache\u0026#34; 2\u0026gt;nul\n\nmkdir \u0026#34;D:\\rengchi\\.chocolatey\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\.vscode\u0026#34; 2\u0026gt;nul\n\nmklink /j \u0026#34;C:\\Users\\rengchi\\.chocolatey\u0026#34; \u0026#34;D:\\rengchi\\.chocolatey\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\.vscode\u0026#34; \u0026#34;D:\\rengchi\\.vscode\u0026#34; 2\u0026gt;nul\n\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Adobe\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\CEF\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Composer\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Deloyment\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Google\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\gopls\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\npm-cache\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\PDFgear\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Programs\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Temp\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Tencent\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\xwalk\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\Yarn\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\zig\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; 2\u0026gt;nul\n\n\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Adobe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Adobe\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\another-redis-desktop-manager-updater\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\apifox-updater\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\CEF\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\CEF\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\CodeArtsTemp\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Composer\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Composer\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Deloyment\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Deloyment\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\golangci-lint\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Google\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Google\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\gopls\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\gopls\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\hugo_cache\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\npm-cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\npm-cache\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\OfficePLUS\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\PDFgear\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\PDFgear\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-cache\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\pnpm-state\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Programs\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Programs\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Sublime Text\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Temp\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Temp\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Tencent\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Tencent\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\wxworkweb\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\xmind-updater\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\xwalk\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\xwalk\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\Yarn\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\Yarn\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\zig\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\zig\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\微信开发者工具\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\ChromeExtensionCache\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Local\\VirtualStore\u0026#34; 2\u0026gt;nul\n\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Adobe\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\apifox\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Captura\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Code\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Composer\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\go\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Google\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\gopls\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; 2\u0026gt;nul\nmkdir \u0026#34;D:\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; 2\u0026gt;nul\n\n\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\360Safe\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Adobe\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Adobe\u0026#34;\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\another-redis-desktop-manager\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\apifox\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\apifox\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Captura\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Captura\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Code\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Code\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Composer\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Composer\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\go\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\go\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Google\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Google\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\gopls\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\gopls\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\SQLyog\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Sublime Text\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Tencent\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\VoipNNModel\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\WXDrive\u0026#34; 2\u0026gt;nul\nmklink /j \u0026#34;C:\\Users\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; \u0026#34;D:\\rengchi\\AppData\\Roaming\\Xmind\u0026#34; 2\u0026gt;nul\n\u003c/code\u003e\u003c/pre\u003e","title":"Windows 初始化"},{"content":"官方文档\n裸仓库 服务器上的 Git\n设置默认分支为 main\nPS D:\\\u0026gt; git config --global init.defaultBranch main 初始一个测试仓库 test.git\nPS D:\\data\\git\\repo\u0026gt; git init --bare test.git 测试\nPS D:\\data\\git\\repo\u0026gt; git clone D:/data/git/repo/test.git D:/data/git/repo/test Cloning into \u0026#39;D:/data/git/repo/test\u0026#39;... warning: You appear to have cloned an empty repository. done. PS D:\\data\\git\\repo\u0026gt; cd .\\test\\ PS D:\\data\\git\\repo\\test\u0026gt; ls PS D:\\data\\git\\repo\\test\u0026gt; echo \u0026#34;Hello, Git\u0026#34; \u0026gt; file.txt PS D:\\data\\git\\repo\\test\u0026gt; git add file.txt PS D:\\data\\git\\repo\\test\u0026gt; git commit -m \u0026#34;Add file.txt\u0026#34; [main (root-commit) ac38950] Add file.txt 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 file.txt PS D:\\data\\git\\repo\\test\u0026gt; git push Enumerating objects: 3, done. Counting objects: 100% (3/3), done. Writing objects: 100% (3/3), 240 bytes | 240.00 KiB/s, done. Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0) To D:/data/git/repo/test.git * [new branch] main -\u0026gt; main PS D:\\data\\git\\repo\\test\u0026gt; 使用 tag 2.6 打标签\n轻量级标签（Lightweight Tag）\n这会使用当前的提交信息，直接跳过编辑过程，只修改提交信息。\ngit tag v1.0.0 注释标签（Annotated Tag）\n注释标签包含更多信息，例如标签的作者和日期。一般推荐使用注释标签。\ngit tag -a v1.0.0 -m \u0026#34;v1.0.0 版本信息\u0026#34; 删除\ngit tag -d v1.0.0 这将会删除本地的 v1.0.0 标签，但不会影响远程仓库。\n推送\n# 推送一个 git push origin v1.0.0 # 推送所有 git push --tags 未 push 的 commit 信息修改 2.4 撤消操作 7.6 重写历史\n修改最后一次的提交信息 git commit --amend 这会打开你设置的默认文本编辑器，允许你修改提交信息。修改后，保存并关闭编辑器即可。\n2.修改提交信息但保持文件不变\ngit commit --amend --no-edit 这会使用当前的提交信息，直接跳过编辑过程，只修改提交信息。\n","permalink":"https://rengchi.github.io/posts/tech/git/","summary":"\u003cp\u003e\u003ca href=\"https://git-scm.com/book/zh/v2\"\u003e\u003cstrong\u003e\u003cem\u003e\u003ccode\u003e官方文档\u003c/code\u003e\u003c/em\u003e\u003c/strong\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"裸仓库\"\u003e裸仓库\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E5%8D%8F%E8%AE%AE\"\u003e服务器上的 Git\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e设置默认分支为 \u003ccode\u003emain\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePS D:\\\u0026gt; git config --global init.defaultBranch main\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\n\u003cp\u003e初始一个测试仓库 \u003ccode\u003etest.git\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePS D:\\data\\git\\repo\u0026gt; git init --bare test.git\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\n\u003cp\u003e测试\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePS D:\\data\\git\\repo\u0026gt; git clone D:/data/git/repo/test.git D:/data/git/repo/test\nCloning into \u0026#39;D:/data/git/repo/test\u0026#39;...\nwarning: You appear to have cloned an empty repository.\ndone.\nPS D:\\data\\git\\repo\u0026gt; cd .\\test\\\nPS D:\\data\\git\\repo\\test\u0026gt; ls\nPS D:\\data\\git\\repo\\test\u0026gt; echo \u0026#34;Hello, Git\u0026#34; \u0026gt; file.txt\nPS D:\\data\\git\\repo\\test\u0026gt; git add file.txt\nPS D:\\data\\git\\repo\\test\u0026gt; git commit -m \u0026#34;Add file.txt\u0026#34;\n[main (root-commit) ac38950] Add file.txt\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 file.txt\nPS D:\\data\\git\\repo\\test\u0026gt; git push\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 240 bytes | 240.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)\nTo D:/data/git/repo/test.git\n * [new branch]      main -\u0026gt; main\nPS D:\\data\\git\\repo\\test\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"使用\"\u003e使用\u003c/h1\u003e\n\u003ch2 id=\"tag\"\u003etag\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE\"\u003e2.6 打标签\u003c/a\u003e\u003c/p\u003e","title":"Git"},{"content":"!注：安装、日志等目录可根据自己的实际情况创建，不一定下面相同\ngo 国内下载（推荐） 官网下载\n下载完成并解压至 D:\\env\\go 并创建 D:\\proj\\go\ngo env -w GO111MODULE=on go env -w GOCACHE=D:\\logs\\go\\go-build go env -w GOMODCACHE=D:\\logs\\go\\pkg\\mod go env -w GOPROXY=https://proxy.golang.com.cn,direct go env -w GOPATH=D:\\proj\\go mysql 需要创建：D:\\logs\\mysql D:\\data\\mysql 示例： mysql-8.0.40\nmysql 下载\n准备 解压至 D:\\env\\mysql 并新建 my.ini 文件\n[mysqld] # 数据库目录 datadir=D:\\\\data\\\\mysql # 端口 port=3306 # 默认字符集 character-set-server=utf8mb4 collation-server=utf8mb4_general_ci # 默认存储引擎 default-storage-engine=INNODB # INNODB 引擎配置 innodb_buffer_pool_size=512M innodb_log_file_size=128M innodb_file_per_table=1 innodb_flush_method=normal # 新的 redo log 容量配置，替代废弃项 innodb_log_file_size 和 innodb_log_files_in_group innodb_redo_log_capacity=268435456 # 日志 log_error=D:\\\\logs\\\\mysql\\\\error.log # 记录慢查询 slow_query_log=1 slow_query_log_file=D:\\\\logs\\\\mysql\\\\slow.log # 其他配置 tmp_table_size=64M max_heap_table_size=64M max_connections=150 thread_cache_size=10 table_open_cache=2000 open_files_limit=5000 # 启用 TLS 支持（如果有 SSL 证书） # ssl-ca=D:/path_to_your_ca.pem # ssl-cert=D:/path_to_your_cert.pem # ssl-key=D:/path_to_your_key.pem # MySQL 连接加密 # 注意：如果你使用 TLS 连接，确保正确配置证书 # 默认情况下会使用自签名证书，可以忽略警告，也可以替换为受信任证书 ssl=1 [client] # 客户端端口配置 port=3306 # 客户端默认字符集 default-character-set=utf8mb4 # 启用连接重试 # 用于客户端遇到连接问题时重新连接 reconnect=1 安装 使用 管理员 打开命令窗口\n# 初始化并获取默认密码 D:\\env\\mysql\\bin\u0026gt; .\\mysqld.exe --initialize --console # 安装到服务中 --install [自定义服务名称]，可以在服务中设置开机自动启动 D:\\env\\mysql\\bin\u0026gt; .\\mysqld.exe --install mysqld --defaults-file=\u0026#34;D:\\env\\mysql\\my.ini\u0026#34; # 启动 D:\\env\\mysql\\bin\u0026gt; net start mysqld mysqld 服务正在启动 . mysqld 服务已经启动成功。 # 连接 MySQL 并初始化密码 D:\\env\\mysql\\bin\u0026gt;.\\mysql.exe -u root -P 3306 -p Enter password: 这里输入上面的密码 ... # mysql8 修改密码 ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH caching_sha2_password BY \u0026#39;your_password\u0026#39;; FLUSH PRIVILEGES; php 示例：PHP 8.4 (8.4.3) VS17 x64 Non Thread Safe (2025-Jan-15 11:07:36)\nphp 下载\n问题 PS D:\\\u0026gt; php -v PHP Warning: \u0026#39;C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll\u0026#39; 14.15 is not compatible with this PHP build linked with 14.42 in Unknown on line 0 问题解决\nPS D:\\\u0026gt; php -v PHP 8.4.3 (cli) (built: Jan 15 2025 11:02:41) (NTS Visual C++ 2022 x64) Copyright (c) The PHP Group Zend Engine v4.4.3, Copyright (c) Zend Technologies 配置 # 763~764行 On windows: extension_dir = \u0026#34;D:\\env\\php\\ext\u0026#34; # 801行 cgi.fix_pathinfo=1 # 964 行 date.timezone = \u0026#34;Asia/Shanghai\u0026#34; # extension，根据实际开发需求 extension=curl extension=openssl extension=pdo_mysql extension=mbstring extension=gd extension=zip extension=exif extension=intl extension=mysqli extension=pgsql extension=odbc extension=xdebug ; 如果你使用调试工具 Composer 安装 下载安装\nPS D:\\env\\composer\u0026gt; php -r \u0026#34;copy(\u0026#39;https://install.phpcomposer.com/installer\u0026#39;, \u0026#39;composer-setup.php\u0026#39;);\u0026#34; PS D:\\env\\composer\u0026gt; php composer-setup.php All settings correct for using Composer Downloading... Composer (version 2.8.4) successfully installed to: D:\\env\\composer\\composer.phar Use it: php composer.phar PS D:\\env\\composer\u0026gt; php .\\composer.phar --version Composer version 2.8.4 2024-12-11 11:57:47 PHP version 8.4.3 (D:\\env\\php\\php.exe) Run the \u0026#34;diagnose\u0026#34; command to get more detailed diagnostics output. composer.bat 新建 D:\\env\\composer\\composer.bat 文件并配置 D:\\env\\composer 到环境变量中\n@php \u0026#34;%~dp0composer.phar\u0026#34; %* PS D:\\\u0026gt; composer --version Composer version 2.8.4 2024-12-11 11:57:47 PHP version 8.4.3 (D:\\env\\php\\php.exe) Run the \u0026#34;diagnose\u0026#34; command to get more detailed diagnostics output. openresty 官网 github latest\n下载 openresty-1.27.1.1-win64.zip 并解压至 D:\\env\\openresty\n使用 # 启动 PS D:\\env\\openresty\u0026gt; .\\nginx.exe # 停止（需在另一个命令窗口中） PS D:\\env\\openresty\u0026gt; .\\nginx.exe -s stop # 测试配置（需在另一个命令窗口中） PS D:\\env\\openresty\u0026gt; .\\nginx.exe -t nginx: the configuration file ./conf/nginx.conf syntax is ok nginx: configuration file ./conf/nginx.conf test is successful # 重载（需在另一个命令窗口中），需要先执行启动 PS D:\\env\\openresty\u0026gt; .\\nginx.exe -s reload openresty + php 推荐使用 phpstudy\n创建 D:\\env\\openresty\\conf\\conf.d 目录，并创建 php.conf 文件\n# openresty + php 测试 server { listen 2025; server_name localhost; location / { root D:\\\\proj\\\\php\\\\demo; index index.php index.html index.htm; try_files $uri $uri/ =404; } location ~ \\.php$ { root D:\\\\proj\\\\php\\\\demo; include fastcgi_params; fastcgi_pass 127.0.0.1:9008; # 确保 PHP-FPM 监听端口正确 fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param PATH_INFO $fastcgi_script_name; } # 配置错误日志和访问日志 error_log D:\\\\logs\\\\php\\\\demo-error.log; access_log D:\\\\logs\\\\php\\\\demo-access.log; } 修改 D:\\env\\openresty\\conf\\nginx.conf ，在 http {\u0026hellip;} 中添加一行\ninclude conf.d\\\\php.conf; 测试\n# php-cgi 启动 PS D:\\env\\php\u0026gt; .\\php-cgi.exe -b 9000 # 重新加载 openresty PS D:\\env\\openresty\u0026gt; .\\nginx.exe -s reload D:\\proj\\php\\demo 中添加 index.php url-test\\test.php\n# index.php \u0026lt;?php echo phpinfo(); # url-test/test.php \u0026lt;?php echo \u0026#39;url-test\u0026#39;; 访问 http://localhost:2025 http://localhost:2025/url-test/test.php\n","permalink":"https://rengchi.github.io/posts/env/windows/dev/","summary":"\u003cp\u003e\u003cstrong\u003e\u003cem\u003e!注：安装、日志等目录可根据自己的实际情况创建，不一定下面相同\u003c/em\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003ch1 id=\"go\"\u003ego\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://golang.google.cn/dl\"\u003e国内下载（推荐）\u003c/a\u003e \u003ca href=\"https://go.dev/dl\"\u003e官网下载\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e下载完成并解压至 \u003ccode\u003eD:\\env\\go\u003c/code\u003e 并创建 \u003ccode\u003eD:\\proj\\go\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ego env -w GO111MODULE=on\ngo env -w GOCACHE=D:\\logs\\go\\go-build\ngo env -w GOMODCACHE=D:\\logs\\go\\pkg\\mod\ngo env -w GOPROXY=https://proxy.golang.com.cn,direct\ngo env -w GOPATH=D:\\proj\\go\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"mysql\"\u003emysql\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e需要创建：\u003ccode\u003eD:\\logs\\mysql\u003c/code\u003e \u003ccode\u003eD:\\data\\mysql\u003c/code\u003e 示例： mysql-8.0.40\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"https://dev.mysql.com/downloads/mysql/\"\u003emysql 下载\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"准备\"\u003e准备\u003c/h2\u003e\n\u003cp\u003e解压至 \u003ccode\u003eD:\\env\\mysql\u003c/code\u003e 并新建 \u003ccode\u003emy.ini\u003c/code\u003e 文件\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[mysqld]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 数据库目录\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003edatadir\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eD:\\\\data\\\\mysql\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 端口\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eport\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e3306\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 默认字符集\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003echaracter-set-server\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eutf8mb4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ecollation-server\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eutf8mb4_general_ci\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 默认存储引擎\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003edefault-storage-engine\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eINNODB\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# INNODB 引擎配置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003einnodb_buffer_pool_size\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e512M\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003einnodb_log_file_size\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e128M\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003einnodb_file_per_table\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003einnodb_flush_method\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003enormal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 新的 redo log 容量配置，替代废弃项 innodb_log_file_size 和 innodb_log_files_in_group\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003einnodb_redo_log_capacity\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e268435456\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 日志\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003elog_error\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eD:\\\\logs\\\\mysql\\\\error.log\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 记录慢查询\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eslow_query_log\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eslow_query_log_file\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eD:\\\\logs\\\\mysql\\\\slow.log\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 其他配置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003etmp_table_size\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e64M\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emax_heap_table_size\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e64M\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emax_connections\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e150\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ethread_cache_size\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003etable_open_cache\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e2000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eopen_files_limit\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e5000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 启用 TLS 支持（如果有 SSL 证书）\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ssl-ca=D:/path_to_your_ca.pem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ssl-cert=D:/path_to_your_cert.pem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# ssl-key=D:/path_to_your_key.pem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# MySQL 连接加密\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 注意：如果你使用 TLS 连接，确保正确配置证书\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 默认情况下会使用自签名证书，可以忽略警告，也可以替换为受信任证书\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003essl\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[client]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 客户端端口配置\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eport\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e3306\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 客户端默认字符集\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003edefault-character-set\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eutf8mb4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 启用连接重试\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 用于客户端遇到连接问题时重新连接\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003ereconnect\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"安装\"\u003e安装\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e使用 \u003ccode\u003e管理员\u003c/code\u003e 打开命令窗口\u003c/p\u003e","title":"Windows"}]