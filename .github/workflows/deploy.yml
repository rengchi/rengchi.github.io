name: GitHub Pages

on:
  push:
    branches:
      - main  # 设置触发部署的分支
  workflow_dispatch: 
    # 允许手动触发工作流

jobs:
  deploy:
    runs-on: ubuntu-latest  # 使用最新版本的 Ubuntu 环境
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}  # 同一时间内只允许一次部署

    steps:
      # 步骤 1: Checkout 代码
      - uses: actions/checkout@v4
        with:
          submodules: true  # 获取 Hugo 主题（设置为 true 或 recursive）
          fetch-depth: 0    # 获取完整的 Git 历史，以便处理 .GitInfo 和 .Lastmod 文件

      # 步骤 2: 安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'  # 使用最新版本的 Hugo，这里也可指定版本号 '0.119.0'

      # 步骤 3: 删除 public 文件夹
      - name: Clear Hugo Cache and Files
        run: |
          rm -rf public/

      # 步骤 4: 构建网站
      - name: Build
        run: hugo --minify  # 构建网站并启用最小化

      # 步骤 5: 部署到 GitHub Pages
      # 仅在 main 分支部署
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}  # 使用自定义的 Personal Access Token
          EXTERNAL_REPOSITORY: rengchi/rengchi.github.io  # GitHub Pages 仓库
          PUBLISH_BRANCH: gh-pages  # 部署到 gh-pages 分支
          PUBLISH_DIR: ./public   # Hugo 构建后的静态文件目录
          commit_message: ${{ github.event.head_commit.message }}  # 使用提交消息作为 commit 信息
